"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["74027"],{87015:function(e,r,o){o.r(r),o.d(r,{metadata:()=>n,contentTitle:()=>i,default:()=>h,assets:()=>d,toc:()=>c,frontMatter:()=>l});var n=JSON.parse('{"id":"QodlyinCloud/qodlyScript/commands/killWorker","title":"killWorker","description":"killWorker()killWorker( process integer )","source":"@site/docs/QodlyinCloud/qodlyScript/commands/killWorker.md","sourceDirName":"QodlyinCloud/qodlyScript/commands","slug":"/QodlyinCloud/qodlyScript/commands/killWorker","permalink":"/docs/next/QodlyinCloud/qodlyScript/commands/killWorker","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20QodlyinCloud%2FqodlyScript%2Fcommands%2FkillWorker.md%20(current)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"current","frontMatter":{"id":"killWorker","title":"killWorker"},"sidebar":"QodlyCloud","previous":{"title":"jsonValidate","permalink":"/docs/next/QodlyinCloud/qodlyScript/commands/jsonValidate"},"next":{"title":"lastErrors","permalink":"/docs/next/QodlyinCloud/qodlyScript/commands/lastErrors"}}'),s=o("85893"),t=o("50065");let l={id:"killWorker",title:"killWorker"},i=void 0,d={},c=[{value:"Description",id:"description",level:4},{value:"Example",id:"example",level:4},{value:"See also",id:"see-also",level:4}];function a(e){let r={a:"a",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"killWorker"}),"()",(0,s.jsx)("br",{}),(0,s.jsx)(r.strong,{children:"killWorker"}),"( ",(0,s.jsx)(r.em,{children:"process"})," : string )",(0,s.jsx)("br",{}),(0,s.jsx)(r.strong,{children:"killWorker"}),"( ",(0,s.jsx)(r.em,{children:"process"})," : integer )"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Parameter"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{style:{textAlign:"center"}}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"process"}),(0,s.jsx)(r.td,{children:"string | integer"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"\u2192"}),(0,s.jsx)(r.td,{children:"Name or number of process to kill (current process if omitted)"})]})})]}),"\n",(0,s.jsx)(r.h4,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"killWorker"})," command posts a message to the worker process whose name or number you passed in ",(0,s.jsx)(r.em,{children:"process"}),", asking it to ignore any pending messages and to terminate its execution as soon as the current task ends."]}),"\n",(0,s.jsx)(r.p,{children:"This command can only be used with worker processes."}),"\n",(0,s.jsxs)(r.p,{children:["In ",(0,s.jsx)(r.em,{children:"process"}),", you pass either the name or number of the worker process whose execution needs to be terminated. If no worker with the specified process name or number exists, ",(0,s.jsx)(r.code,{children:"killWorker"})," does nothing."]}),"\n",(0,s.jsxs)(r.p,{children:["If you do not pass any parameter, ",(0,s.jsx)(r.code,{children:"killWorker"})," applies to the currently running worker."]}),"\n",(0,s.jsxs)(r.p,{children:["If ",(0,s.jsx)(r.code,{children:"killWorker"})," is applied to a worker that was not created explicitly using the ",(0,s.jsx)(r.a,{href:"/docs/next/QodlyinCloud/qodlyScript/commands/callWorker",children:(0,s.jsx)(r.code,{children:"callWorker"})})," command, it only asks this worker to empty its message box."]}),"\n",(0,s.jsxs)(r.p,{children:["If the ",(0,s.jsx)(r.a,{href:"/docs/next/QodlyinCloud/qodlyScript/commands/callWorker",children:(0,s.jsx)(r.code,{children:"callWorker"})})," command is called to send a message to a worker that was just killed by ",(0,s.jsx)(r.code,{children:"killWorker"}),", a new process is started. To make sure that there is only one process running at a time for a worker, the new process will start after the previous one is actually terminated. Note however that if ",(0,s.jsx)(r.a,{href:"/docs/next/QodlyinCloud/qodlyScript/commands/callWorker",children:(0,s.jsx)(r.code,{children:"callWorker"})})," is called from a worker to send itself a message whereas it has just been killed by ",(0,s.jsx)(r.code,{children:"killWorker"}),", the command does nothing."]}),"\n",(0,s.jsx)(r.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(r.p,{children:"The following code triggers the termination of a worker:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-qs",children:'callWorker(vWorkerName,"theWorker","end")\n\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-qs",children:'   //theWorker method\n\ndeclare (param : text)\nswitch\n    :(param == "call") //the worker is called\n       ... //do something\n    :(param == "end") //the worker is asked to kill itself\n      killWorker()\nend\n'})}),"\n",(0,s.jsx)(r.h4,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/docs/next/QodlyinCloud/qodlyScript/commands/callWorker",children:(0,s.jsx)(r.code,{children:"callWorker"})}),(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(r.a,{href:"/docs/next/QodlyinCloud/qodlyScript/SignalClass",children:[(0,s.jsx)(r.code,{children:"Signal"})," class"]})]})]})}function h(e={}){let{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},50065:function(e,r,o){o.d(r,{Z:function(){return i},a:function(){return l}});var n=o(67294);let s={},t=n.createContext(s);function l(e){let r=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);