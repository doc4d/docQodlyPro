"use strict";(self.webpackChunkqodly=self.webpackChunkqodly||[]).push([["80716"],{22357:function(e,t,i){i.r(t),i.d(t,{metadata:()=>o,contentTitle:()=>l,default:()=>h,assets:()=>s,toc:()=>d,frontMatter:()=>c});var o=JSON.parse('{"id":"QodlyinCloud/qodlyScript/commands/blobToPicture","title":"blobToPicture","description":"blobToPicture ( pictureBlob picture , codec : string )","source":"@site/versioned_docs/version-R10/QodlyinCloud/qodlyScript/commands/blobToPicture.md","sourceDirName":"QodlyinCloud/qodlyScript/commands","slug":"/QodlyinCloud/qodlyScript/commands/blobToPicture","permalink":"/docQodlyPro/QodlyinCloud/qodlyScript/commands/blobToPicture","draft":false,"unlisted":false,"editUrl":"https://github.com/qodly/docs/issues/new?title=Comment%20on%20QodlyinCloud%2FqodlyScript%2Fcommands%2FblobToPicture.md%20(R10)&body=Share%20any%20feedback%20about%20this%20page%20%E2%80%94%20report%20issues%2C%20suggest%20improvements%2C%20or%20tell%20us%20what%E2%80%99s%20helpful.%0A%0AIf%20it%E2%80%99s%20an%20issue%3A%0A-%20What%E2%80%99s%20the%20issue%3F%20(e.g.%2C%20typo%2C%20incorrect%20information%2C%20unclear%20explanation)%0A-%20Where%20is%20it%3F%20(e.g.%2C%20section%20name%2C%20specific%20paragraph%2C%20or%20line)%0A%0AThank%20you%20for%20helping%20us%20improve!%20%F0%9F%9A%80%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20","tags":[],"version":"R10","frontMatter":{"id":"blobToPicture","title":"blobToPicture"},"sidebar":"QodlyCloud","previous":{"title":"base64Encode","permalink":"/docQodlyPro/QodlyinCloud/qodlyScript/commands/base64Encode"},"next":{"title":"bool","permalink":"/docQodlyPro/QodlyinCloud/qodlyScript/commands/bool"}}'),n=i("85893"),r=i("50065");let c={id:"blobToPicture",title:"blobToPicture"},l=void 0,s={},d=[{value:"Description",id:"description",level:4},{value:"System variables and sets",id:"system-variables-and-sets",level:4},{value:"See also",id:"see-also",level:4}];function a(e){let t={a:"a",code:"code",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"blobToPicture"})," ( ",(0,n.jsx)(t.em,{children:"pictureBlob"})," : blob , ",(0,n.jsx)(t.em,{children:"aPicture"})," : picture , ",(0,n.jsx)(t.em,{children:"codec"})," : string )"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"center"}}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"pictureBlob"}),(0,n.jsx)(t.td,{children:"blob"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,n.jsx)(t.td,{children:"Blob containing a picture"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"aPicture"}),(0,n.jsx)(t.td,{children:"picture"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"\u2190"}),(0,n.jsx)(t.td,{children:"Picture from blob"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"codec"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"\u2192"}),(0,n.jsx)(t.td,{children:"Picture codec ID"})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"blobToPicture"})," command inserts a picture stored in a blob into a Qodly picture variable, regardless of its original format."]}),"\n",(0,n.jsxs)(t.p,{children:["This command allows you to display pictures stored in native format into blobs. You can load a picture into a blob using, for example, the ",(0,n.jsx)(t.a,{href:"/docQodlyPro/QodlyinCloud/qodlyScript/commands/pictureToBlob",children:(0,n.jsx)(t.code,{children:"pictureToBlob"})})," command."]}),"\n",(0,n.jsxs)(t.p,{children:["A blob variable containing a picture is passed in the ",(0,n.jsx)(t.em,{children:"pictureBlob"})," parameter. The picture can be in any format supported natively by Qodly. If you pass the optional ",(0,n.jsx)(t.em,{children:"codec"})," parameter, Qodly will use the value provided in this parameter to decode the blob (see the specific functioning of the command with this third parameter below)."]}),"\n",(0,n.jsxs)(t.p,{children:["Pass in the ",(0,n.jsx)(t.em,{children:"picture"})," parameter the Qodly picture variable which should display the picture."]}),"\n",(0,n.jsxs)(t.p,{children:["Once the command has been executed, if the blob was correctly decoded, the ",(0,n.jsx)(t.em,{children:"picture"})," parameter contains the picture to display."]}),"\n",(0,n.jsxs)(t.p,{children:["The optional ",(0,n.jsx)(t.em,{children:"codec"})," parameter lets you specify the codec to be used for decoding the blob."]}),"\n",(0,n.jsxs)(t.p,{children:["If you pass a codec recognized by QodlyScript in ",(0,n.jsx)(t.em,{children:"codec"}),", it is applied to the blob and the picture is returned in the ",(0,n.jsx)(t.em,{children:"picture"})," variable."]}),"\n",(0,n.jsxs)(t.p,{children:["If you pass a codec that is not recognized by QodlyScript in ",(0,n.jsx)(t.em,{children:"codec"}),", a new codec is recorded dynamically with the ID passed in the parameter. Qodly then returns a picture that encapsulates the blob and the OK variable is set to 1. In this case, to retrieve the blob, you will need to use the ",(0,n.jsx)(t.a,{href:"/docQodlyPro/QodlyinCloud/qodlyScript/commands/pictureToBlob",children:(0,n.jsx)(t.code,{children:"pictureToBlob"})})," command with the same custom ID. This particular mechanism can be used to meet two specific needs:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Encapsulation of a blob (that is not a picture) into a picture,"}),"\n",(0,n.jsx)(t.li,{children:"Loading a picture without using a codec."}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"system-variables-and-sets",children:"System variables and sets"}),"\n",(0,n.jsxs)(t.p,{children:["If the command has been executed correctly, the system variable OK is set to 1. If the conversion has failed (QuickTime is not installed, the blob does not contain a readable picture, the ",(0,n.jsx)(t.em,{children:"codec"})," parameter recognized but blob not validated, etc.), OK is set to 0 and the Qodly picture variable is returned empty."]}),"\n",(0,n.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docQodlyPro/QodlyinCloud/qodlyScript/commands/pictureToBlob",children:(0,n.jsx)(t.code,{children:"pictureToBlob"})})})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},50065:function(e,t,i){i.d(t,{Z:function(){return l},a:function(){return c}});var o=i(67294);let n={},r=o.createContext(n);function c(e){let t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);